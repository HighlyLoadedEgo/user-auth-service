services:
  api:
    container_name: lynx.api
    build:
      context: .
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lynx.network
    env_file:
      - .env
    command: ["bash", "./entrypoint.sh"]
    healthcheck:
      test: [ "CMD-SHELL", "curl -fsSL http://localhost:${SERVER_PORT}/healthcheck" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s

  nginx:
    container_name: lynx.nginx
    image: nginx:latest
    ports:
      - 8000:8080
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - lynx.network
    depends_on:
      - api

  database:
      container_name: lynx.database
      image: postgres:16-alpine
      restart: unless-stopped
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        PGDATA: ${POSTGRES_PGDATA}
      ports:
        - ${POSTGRES_PORT}:5432
      volumes:
        - lynx.postgres.data:${POSTGRES_PGDATA}:rw
      networks:
        - lynx.network
      env_file:
        - .env
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
        interval: 10s
        timeout: 60s
        retries: 5
        start_period: 10s

  celery:
    container_name: lynx.celery
    restart: unless-stopped
    build:
      context: .
    command: [ "celery", "-A", "src.core.celery.celery_configuration", "worker", "--beat" ]
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - lynx.network
    env_file:
      - .env

  flower:
    container_name: lynx.flower
    restart: unless-stopped
    build:
      context: .
    command: [ "celery", "-A", "src.core.celery.celery_configuration", "--broker=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}/1", "flower", "--address=0.0.0.0", "--port=5555" ]
    ports:
      - 5555:5555
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
      celery:
        condition: service_started
    networks:
      - lynx.network
    env_file:
      - .env

  redis:
    container_name: lynx.redis
    image: redis:alpine
    restart: unless-stopped
    command: [ "redis-server", "--appendonly", "yes", "--replica-read-only", "no", "--requirepass", "${REDIS_PASSWORD}" ]
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - lynx.network
    env_file:
      - .env
    volumes:
      - lynx.redis.data:${REDIS_DATA}:rw
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  lynx.postgres.data: {}
  lynx.redis.data: {}

networks:
  lynx.network: {}
